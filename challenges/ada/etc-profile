#!/bin/bash
#
# This file greets the user and gives instructions.
#

echo "Hello dear friend. Thanks for joining forces with our team to clean up" \
     "the mess after those crackers broke into our system." \
     "Our team is working on the damage as well and will lend you a hand in" \
     "need."
echo "Your first challenge has already begun."
echo "The hacker has infiltrated the system you are on." \
     "Do not trust that this computer is friendly." \
     "We think that the attacker is mocking us and left the name of the" \
     "collective as we found other files with the word \"r4""ven\" in them." \
     "We suggest you look around this computer and rid it of the infected"\
     "files."
echo "Good Luck!"

#
# Replace the user feedback of the challenge status.
#
function challengeStatusShort() {
	local filesInfected
	local filesFound
	local max
	filesInfected=0
	max="?"
	if grep -q 'r''4ven' ~/.bashrc 2>>/dev/null; then
		filesInfected="$(( filesInfected + 1 ))"
	fi
	if grep -q 'r''4ven' /etc/init.d/r""4ven 2>>/dev/null; then
		filesInfected="$(( filesInfected + 1 ))"
	fi
	if ls -la /root 2>>/dev/null | grep -q .bashrc; then
		filesInfected="$(( filesInfected + 1 ))"
	fi
	filesFound="$(( 3 - filesInfected ))"
	if [ "$filesFound" -ge 2 ]; then
	  max="3"
	fi
	echo -n "challenge $filesFound/$max"
	if [ "$filesInfected" == "0" ]; then
	  echo " type nextChallenge"
	fi
	return "$filesInfected"
}

function nextChallenge() {
	echo "TODO: instructions for the next challenge"
}
